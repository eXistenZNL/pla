{"name":"Pla","tagline":"Coder's simplest workflow automation tool.","body":"# Pla\r\n\r\nPla helps you automate workflows in a very simple way. Much like make, but with a yaml file structure.\r\n\r\nIt's a coder's simplest workflow automation tool.\r\n\r\n## Install\r\n\r\nUse the pip installer to install Pla\r\n\r\n``` bash\r\n$ pip install pla\r\n```\r\n\r\n## Usage\r\n\r\n```bash\r\n$ pla [target]\r\n```\r\n\r\nIf you do not provide a target, the default target called `all` will run.\r\n\r\n## Start working with Pla\r\n\r\nPla works similar to [Make](https://www.gnu.org/software/make/). You define the targets in a Yaml file called `Plafile.yml`\r\nand run the targets from the command line.\r\n\r\nLets say we use Pla to kickstart our working day. We will make a Plafile which starts our local dev server, starts our IDE\r\n and opens the application we're working on in the browser.\r\n \r\nFirst create the Plafile with a target called `dev`:\r\n\r\n```yaml\r\n# Plafile.yml\r\ndev:\r\n  - docker-compose up -d\r\n  - pstorm .\r\n  - open http://local.project.url/\r\n```\r\n\r\nThen simply run Pla from the command line:\r\n```bash\r\n$ pla dev\r\n```\r\n\r\nPla will then run the shell commands you specified in the Plafile.\r\n\r\n## Linking targets\r\n\r\nAs of Pla v0.2 it is also possible to let your targets call each other. This is simply done by refering to the target \r\nprepended with an `=` sign. Like so:\r\n\r\n```yaml\r\n# Plafile.yml\r\nup:\r\n  - docker-compose up -d\r\n  - =updatecode\r\n  - pstorm .\r\n  - open http://local.project.url/\r\n  \r\nupdatecode:\r\n  - git submodule update --init --recursive\r\n  - composer install\r\n```\r\n\r\n## Target parameters\r\n\r\nPla v0.3 gives you the ability to variables in target commands. This feature is called target parameters.\r\n \r\nSimply define the parameters in the target definition, and put them in your command. Enclosing the parameters name with \r\n`%` signs. For example:\r\n\r\n```yaml\r\n# Plafile.yml\r\npr[number]:\r\n  - git pr %number%\r\n  - git pull upstream master\r\n```\r\n\r\nYou can then call the target like this:\r\n\r\n```bash\r\n$ pla pr 123\r\n```\r\n\r\n  **Disclaimer** The current implementation of target parameters is built to work only when you directly call the\r\n  parametrized target.\r\n\r\n## Credits\r\n\r\n- [Richard Tuin](https://github.com/rtuin)\r\n- [All Contributors](../../contributors)\r\n\r\n## License\r\n\r\nThe MIT License (MIT). Please see the [license file](LICENSE) for more information.","google":"UA-259721-9","note":"Don't delete this file! It's used internally to help with page regeneration."}